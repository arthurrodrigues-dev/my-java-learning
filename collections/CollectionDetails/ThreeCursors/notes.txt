Three cursors of java
-> Retrieve Objects one by one from collection object

1. Enumeration
2. Iterator
3. ListIterator

1. Enumeration:

Enumeration e = v.elements(); // v is Vector object

Enumeration methods:

-> boolean hasMoreElements();
-> Object nextElement();

How to get one by one vector elements by using enumeration?

Enumeration e = v.elements();

while (e.hasMoreElements()) {
    Integer I = (Integer) e.nextElement(); // nextElement() returns a object, so it's necessary to cast 
}

Limitations of Enumeration:
-> Enumeration concept is applicable only for legacy classes and hence it's not a universal cursor.
-> By using Enumeration we can get only read access and we can't perform remove operation.

To overcome, we should go for Iterator.

2. Iterator

-> We can apply Iterator concept for any Collection object hence it is universal cursors
-> By using Iterator we can perform both read and remove operations.

Iterator itr = c.iterator(); // c is any collection object

Iterator methods:

boolean hasNext();
Object next();
void remove();

Limitations of Iterator:
-> By using Enumeration and Iterator, we can move only forward direction and we can't move to the backward direction, and hence these are single direction cursors.
-> By using Iterator, we can perform only read and remove operations and we can't perform replacement of new Objects.

To overcome above limitations, we should go for ListIterator

3. ListIterator